< 관계형 데이터베이스를 위한 데이터모델링 수업 > 정리. 

	목표 : 표에 정보(데이터)를 담아보자.
	
	
	1. 전체 흐름
		업무파악 -> 개념적 데이터모델링(ER-D 생성) -> 논리적 데이터모델링 (표로 전환 UML 생성) -> 물리적 데이터모델링(SQL 코드)
	
	
	2. 개념적 데이터모델링
		: 우리가 파악한 업무에서 개념을 뽑아내는 과정
		
		* 개념적 데이터모델링의 목적
			: 현실에서 개념을 추출하는 필터역할 ; 현실을 간단히 바라볼 수 있게 하는 역할
			: 개념에 대해서 다른 사람들과 대화할 수 있게 하는 언어 역할
			: Entity Relationship Diagram를 사용해서 진행 
			
	3. ER-D를 만드는 방법
		: 주제에 따라서 테이블을 나눈다. 
		: 개념들을 포함관계로 뽑아내지말고 평면적관계로 뽑아내야한다. ( 댓글 | 글 | 저자 )		
		* 주제에 따라서 테이블을 나누면 좋은점
			: 주제에 따라서 데이터를 그룹화 할 수 있다.
			: 필요한 주제만 뽑아내서 쓸 수 있기 때문에 자원을 절약할 수 있다.
			: join 가능. 테이블간 join을 통해 언제든지 합성이 가능하다.
			
		
	4. ER-D의 구성요소
		
		* 개체(Entity) 
			->Table
		* 속성(Attribute)
			->Column
		* 관계(Relation) 
			->PK, FK
			
	4-1. ER-D의 구성요소 중 Entity 정의해보기
		: 단독으로 존재하는 객체, 동일한 객체는 존재하지 않는다.
		: ER-D에서는 사각형으로 표현
	
	4-2. ER-D의 구성요소 중 Attribute 정의해보기
		: 개체가 갖는 속성
		: ER-D에서는 원으로 표현
	
	4-3. 식별자 지정 (Identifier)
		: Entity가 가지는 Attribute 중 대표되는 Attribute
		: 국민은 주민번호,웹사이트는 도메인주소 등이 식별자가 될 수 있다.
		: 원하는 대상을 정확하게 타겟팅, 그 대상을 제외하고 같은 값을 가져서는 안된다.
		: -> Primary key (PK)
		
	4-4. Relationship (개체들간의 연결)
		: PK(기본키) - FK(외래키)가 연결되는 걸 통해서 실제로 구현된다.
		: 마름모꼴로 표현
		
		* Cardinality
			: 하나의 Relation에 형성된 Tuple의 개수
		* Optionality
			: Mandatory(필수), Optional(선택)
		
		* 저자와 글의 관계
			:저자는 글을 여러개 가질 수 있고 저자는 글을 쓰지 않을 수 있다. N, Optional
			 글은 저자를 여러개 가질 수 있고 글은 저자를 반드시 가져야한다. N, Mandatory
		
		
	5-1. 논리적 데이터 모델링
		: 관계형 데이터베이스 형식에 맞는 데이터 형식을 정리정돈 하는 것
		
		* Mapping Rule
			: ER-D 통해서 표현한 내용을 관계형 데이터베이스에 맞는 형식으로 전환할 때 쓰는 방법
			: Entity -> Table
			  Attribute -> Column
			  Relation -> PK, FK
		
	5-2. 테이블과 컬럼 생성
		
		* 순서
			1)Entity를 Table로 바꾼다.
				tip. 여러 Entity들 중에서 foregin key값이 없는 Entity부터 전환하는 것이 좋음
			2)Relationship -> PK, FK 전환, Cardinality가 몇대몇이냐 따져보는 것이 중요(1:1 / 1:N / N:M)
				tip. 가장 단순한 단계인 1:1 단계부터 차례로 진행하는 것이 좋다.
	
	6-1. Normalization 정규화
		: 표를 만들 수 있는 레시피, 정제되지 않은 표를 관계형 데이터베이스에 어울리는 표로 만들어주는 방법
		
		* 목적
			: 구성되는 모든 Relation이 중복되지 않게 효과적으로 표현이 가능하도록 한다.
			: 정규화를 통회 저장 공간을 최소화하고, 자료의 불일치를 최소하시키며 자료 구조를 안정화시킨다.
		
	6-2. 제 1정규화
		
		* 원칙
			:Atomic columns 각각의 컬럼의 값들이 하나의 값을 가져야 한다.
			
	6-3. 제 2정규화
	
		* 원칙
			:No partial dependencies 부분 종속성이 없어야한다. 
			: 기본키 중에 중복키가 없어야 한다.
	
	6-4. 제 3정규화
		
		* 원칙
			:No transitive dependiencies 
			
	7-1. 물리적 데이터 모델링
		: 논리적 데이터 모델링을 통해 만든 이상적인 표를 구체적인 제품에 맞는 현실적인 표로 만드는 것
		
	7-2. denormalization 역정규화	
		: 쓰기의 편리함을 위해 읽기의 성능을 희생하는 것. 
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		